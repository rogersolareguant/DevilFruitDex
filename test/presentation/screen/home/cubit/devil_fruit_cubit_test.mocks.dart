// Mocks generated by Mockito 5.4.4 from annotations
// in devilfruitdex/test/presentation/screen/home/cubit/devil_fruit_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:devilfruitdex/domain/model/devil_fruit.dart' as _i5;
import 'package:devilfruitdex/domain/repository/devil_fruit_repository.dart'
    as _i3;
import 'package:devilfruitdex/domain/repository/favourites_repository.dart'
    as _i6;
import 'package:devilfruitdex/domain/repository/location_repository.dart'
    as _i7;
import 'package:latlong2/latlong.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLatLng_0 extends _i1.SmartFake implements _i2.LatLng {
  _FakeLatLng_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DevilFruitRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockDevilFruitRepository extends _i1.Mock
    implements _i3.DevilFruitRepository {
  @override
  _i4.Future<List<_i5.DevilFruit>> getAllDevilFruitsRepo() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllDevilFruitsRepo,
          [],
        ),
        returnValue: _i4.Future<List<_i5.DevilFruit>>.value(<_i5.DevilFruit>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i5.DevilFruit>>.value(<_i5.DevilFruit>[]),
      ) as _i4.Future<List<_i5.DevilFruit>>);
}

/// A class which mocks [FavouritesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFavouritesRepository extends _i1.Mock
    implements _i6.FavouritesRepository {
  @override
  _i4.Stream<List<int>> getFavourites(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #getFavourites,
          [uid],
        ),
        returnValue: _i4.Stream<List<int>>.empty(),
        returnValueForMissingStub: _i4.Stream<List<int>>.empty(),
      ) as _i4.Stream<List<int>>);

  @override
  _i4.Future<void> setFavourites(
    String? uid,
    List<int>? favouriteFruits,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setFavourites,
          [
            uid,
            favouriteFruits,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [LocationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationRepository extends _i1.Mock
    implements _i7.LocationRepository {
  @override
  _i4.Future<_i2.LatLng> getPosition() => (super.noSuchMethod(
        Invocation.method(
          #getPosition,
          [],
        ),
        returnValue: _i4.Future<_i2.LatLng>.value(_FakeLatLng_0(
          this,
          Invocation.method(
            #getPosition,
            [],
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.LatLng>.value(_FakeLatLng_0(
          this,
          Invocation.method(
            #getPosition,
            [],
          ),
        )),
      ) as _i4.Future<_i2.LatLng>);
}
